---
- name: Configure GitLab Geo and Database Settings
  hosts: primary_gitlab_server
  remote_user: mostafa
  become: yes
  become_method: sudo
  vars_files:
    - vars/main.yml

  tasks:
    - block:
        - name: Add Geo Node Name
          lineinfile:
            path: /etc/gitlab/gitlab.rb
            line: "gitlab_rails['geo_node_name'] = '{{ geo_node_name }}'"
          register: add_geo_node_name_result
          changed_when: true

        - name: Debug Geo Node Name Result
          debug:
            var: add_geo_node_name_result

        - name: Fail if adding Geo Node Name fails
          fail:
            msg: "Failed to add Geo Node Name to gitlab.rb."
          when: add_geo_node_name_result is failed

        - name: Reconfigure Gitlab
          command: gitlab-ctl reconfigure


    - block:
        - name: Define the site as the primary Geo site
          command: gitlab-ctl set-geo-primary-node
          register: geo_primary_node_result
          failed_when: geo_primary_node_result.rc != 0

        - name: Debug Geo Primary Node Result
          debug:
            var: geo_primary_node_result

        - name: Fail if defining Geo primary site fails
          fail:
            msg: "Failed to define the site as the primary Geo site."
          when: geo_primary_node_result.rc != 0


    - block:
        - name: Generate MD5 password for gitlab database user
          command: "gitlab-ctl pg-password-md5 gitlab"
          args:
            stdin: "{{ gitlab_db_password }}"
          register: gitlab_db_password_md5
          changed_when: False
          failed_when: gitlab_db_password_md5.rc != 0

        - name: Debug GitLab DB Password MD5
          debug:
            var: gitlab_db_password_md5

        - name: Fail if MD5 password generation for gitlab user fails
          fail:
            msg: "Failed to generate MD5 password for gitlab database user."
          when: gitlab_db_password_md5.rc != 0

        - name: Generate MD5 password for gitlab replicator user
          command: "gitlab-ctl pg-password-md5 gitlab_replicator"
          args:
            stdin: "{{ gitlab_replicator_password }}"
          register: gitlab_replicator_password_md5
          changed_when: False
          failed_when: gitlab_replicator_password_md5.rc != 0

        - name: Debug GitLab Replicator Password MD5
          debug:
            var: gitlab_replicator_password_md5

        - name: Fail if MD5 password generation for gitlab replicator user fails
          fail:
            msg: "Failed to generate MD5 password for gitlab replicator user."
          when: gitlab_replicator_password_md5.rc != 0


    - block:
        - name: Enable Geo Primary Role
          blockinfile:
            path: /etc/gitlab/gitlab.rb
            block: |
              roles ['geo_primary_role']
            marker: "# {mark} ANSIBLE MANAGED BLOCK GEO PRIMARY"
          register: enable_geo_primary_role_result

        - name: Debug Enable Geo Primary Role Result
          debug:
            var: enable_geo_primary_role_result

        - name: Fail if enabling Geo Primary Role fails
          fail:
            msg: "Failed to enable Geo Primary Role."
          when: enable_geo_primary_role_result is failed


    - block:
        - name: Configure Database Passwords
          blockinfile:
            path: /etc/gitlab/gitlab.rb
            block: |
              postgresql['sql_user_password'] = '{{ gitlab_db_password_md5.stdout }}'
              gitlab_rails['db_password'] = '{{ gitlab_db_password }}'
              postgresql['sql_replication_password'] = '{{ gitlab_replicator_password_md5.stdout }}'
            marker: "# {mark} ANSIBLE MANAGED BLOCK DB PASSWORDS"
          register: configure_db_passwords_result

        - name: Debug Configure DB Passwords Result
          debug:
            var: configure_db_passwords_result

        - name: Fail if configuring database passwords fails
          fail:
            msg: "Failed to configure database passwords."
          when: configure_db_passwords_result is failed


    - block:
        - name: Configure PostgreSQL for Geo
          blockinfile:
            path: /etc/gitlab/gitlab.rb
            block: |
              postgresql['listen_address'] = '{{ primary_site_ip }}'
              postgresql['md5_auth_cidr_addresses'] = ['{{ primary_site_ip }}/32', '{{ secondary_site_ip }}/32']
            marker: "# {mark} ANSIBLE MANAGED BLOCK GEO POSTGRESQL"
          register: configure_postgresql_geo_result

        - name: Debug Configure PostgreSQL Geo Result
          debug:
            var: configure_postgresql_geo_result

        - name: Fail if configuring PostgreSQL for Geo fails
          fail:
            msg: "Failed to configure PostgreSQL for Geo."
          when: configure_postgresql_geo_result is failed


    - block:
        - name: Disable Automatic Database Migrations
          lineinfile:
            path: /etc/gitlab/gitlab.rb
            line: "gitlab_rails['auto_migrate'] = false"
          register: disable_auto_migrate_result

        - name: Debug Disable Auto Migrate Result
          debug:
            var: disable_auto_migrate_result

        - name: Fail if disabling automatic database migrations fails
          fail:
            msg: "Failed to disable automatic database migrations."
          when: disable_auto_migrate_result is failed

        - name: Reconfigure Gitlab
          command: gitlab-ctl reconfigure

        - name: Restart Postgresql
          command: gitlab-ctl restart postgresql

    - block:
        - name: Comment out auto_migrate false setting
          lineinfile:
            path: /etc/gitlab/gitlab.rb
            regexp: "^gitlab_rails\\['auto_migrate'\\] = false"
            line: "# gitlab_rails['auto_migrate'] = false"
          register: comment_out_auto_migrate_false

        - name: Debug Comment Out Auto Migrate False Result
          debug:
            var: comment_out_auto_migrate_false

        - name: Fail if commenting out auto_migrate false setting fails
          fail:
            msg: "Failed to comment out the auto_migrate false setting."
          when: comment_out_auto_migrate_false is failed

        - name: Enable Automatic Database Migrations
          lineinfile:
            path: /etc/gitlab/gitlab.rb
            line: "gitlab_rails['auto_migrate'] = true"
          register: enable_auto_migrate_result

        - name: Debug Enable Auto Migrate Result
          debug:
            var: enable_auto_migrate_result

        - name: Fail if enabling automatic database migrations fails
          fail:
            msg: "Failed to enable automatic database migrations."
          when: enable_auto_migrate_result is failed

        - name: Reconfigure Gitlab
          command: gitlab-ctl reconfigure

    - block:
        - name: Set up fast lookup for GitLab Shell with OpenSSH
          blockinfile:
            path: /etc/ssh/sshd_config
            block: |
              Match User git
                AuthorizedKeysCommand /opt/gitlab/embedded/service/gitlab-shell/bin/gitlab-shell-authorized-keys-check git %u %k
                AuthorizedKeysCommandUser git
              Match all
            marker: "# {mark} ANSIBLE MANAGED BLOCK FAST LOOKUP"
          register: setup_fast_lookup_result
          changed_when: true

        - name: Debug Setup Fast Lookup Result
          debug:
            var: setup_fast_lookup_result

        - name: Fail if setting up fast lookup for GitLab Shell with OpenSSH fails
          fail:
            msg: "Failed to set up fast lookup for GitLab Shell with OpenSSH."
          when: setup_fast_lookup_result is failed

        - name: restart ssh
          service:
            name: sshd
            state: restarted

    - name: Verify PostgreSQL Listening on Port 5432
      shell: netstat -plnt | grep 5432
      register: postgres_listen
      failed_when: "'5432' not in postgres_listen.stdout"
      changed_when: False

    - name: Fail if PostgreSQL is not listening on port 5432
      fail:
        msg: "PostgreSQL is not listening on port 5432."
      when: "'5432' not in postgres_listen.stdout"
