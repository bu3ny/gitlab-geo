---
- name: Prepare RHEL 8 and Install GitLab EE from Local Repository
  hosts: all
  remote_user: user
  become: yes
  become_method: sudo  
  vars_files:
    - vars/main.yml

  tasks:
    - block:
        - name: Set SELinux to permissive mode
          selinux:
            policy: targeted
            state: permissive

        - name: Ensure SELinux is permissive on reboot
          lineinfile:
            path: /etc/selinux/config
            regexp: '^SELINUX='
            line: 'SELINUX=permissive'

        - name: Ensure required packages are installed
          package:
            name: "{{ item }}"
            state: present
          loop:
            - vim
            - wget
            - bash-completion
            - tuned
            - net-tools
            - jq
            - curl
            - policycoreutils-python-utils
            - postfix

        - name: Ensure tuned service is enabled and running
          systemd:
            name: tuned
            state: started
            enabled: yes

        - name: Set the active tuned profile to performance
          command: tuned-adm profile performance

        - name: Ensure postfix is enabled and running
          systemd:
            name: postfix
            state: started
            enabled: yes

        - name: Configure Postfix to use all network interfaces
          lineinfile:
            path: /etc/postfix/main.cf
            regexp: '^inet_interfaces ='
            line: 'inet_interfaces = all'
            create: yes

        - name: Reload Postfix to apply configuration changes
          command: systemctl reload postfix

        - name: Download and install GitLab EE from local HTTP server
          get_url:
            url: "https://{{ http_server }}/{{ gitlab_rpm }}"
            dest: "/tmp/{{ gitlab_rpm }}"
            validate_certs: no
          register: download_result

        - name: Install GitLab EE from downloaded RPM
          yum:
            name: "/tmp/{{ gitlab_rpm }}"
            state: present
            disable_gpg_check: yes
          register: install_result
          failed_when: install_result.rc != 0

        - name: Clean up downloaded RPM file
          file:
            path: "/tmp/{{ gitlab_rpm }}"
            state: absent
          when: install_result.rc == 0

      rescue:
        - name: Set playbook status to FAILED
          set_fact:
            playbook_status: "FAILED"

        - name: Report failure
          debug:
            msg: "An error occurred. Task details: {{ ansible_failed_task }}"

        - name: Fail the playbook
          fail:
            msg: "Playbook failed due to errors during execution."

      always:
        - name: Ensure playbook execution status is recorded
          copy:
            content: "Playbook executed with status: {{ playbook_status | default('SUCCESS') }}\n"
            dest: "/tmp/prepare-master.log"
            remote_src: no

        - name: Set playbook status to SUCCESS if not already set
          set_fact:
            playbook_status: "{{ playbook_status | default('SUCCESS') }}"
